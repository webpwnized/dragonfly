# Define the name of the workflow.
name: Scan Application with StackHawk

# Define when the workflow should be triggered.
on:
  # Trigger the workflow on the following events:

  # Scan changed files in Pull Requests (diff-aware scanning).
  pull_request: {}

  # Trigger the workflow on-demand through the GitHub Actions interface.
  workflow_dispatch: {}

  # Scan development branches and report findings.
  push:
    branches:
      - 'development'

    # Define environment variables for better organization.
env:
  WEB_CONTAINER_NAME: "www"

# Define the jobs that should be executed in this workflow.
jobs:
  # Job to run StackHawk HawkScan as a GitHub Action.
  hawkscan-job:
    name: StackHawk HawkScan Github Action

    # Specify the runner environment. Use the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # Define permissions for specific GitHub Actions.
    permissions:
      actions: read          # Permission to read GitHub Actions.
      contents: read         # Permission to read repository contents.
      security-events: write # Permission to write security events.

    # Define the steps that should be executed in this job.
    steps:
      # Step 1: Checkout the application source code from the repository.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: .

      # Step 2: Set up Docker Buildx on the runner.
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Set up Docker Buildx on the runner
        uses: docker/setup-buildx-action@v3

      # Step 3: Build and Start Containers
      - name: Build and Export Web Container to Docker
        uses: docker/build-push-action@v5
        with:
          push: false
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/.build/${{ env.WEB_CONTAINER_NAME }}/Dockerfile
          load: true
          tags: webpwnized/dragonfly:${{ env.WEB_CONTAINER_NAME }}

      # Step 4: Build and Start Containers
      - name: Build and Start Containers
        run: |

          # Starting containers using Docker Compose. 
          docker-compose --file .build/docker-compose.yml up -d;

      # Step 5: Check if web application up
      - name: Check Web Application
        run: |

          # This should return the index.php home page content
          curl http://127.0.0.1:8888/;

      # Step 6: Run StackHawk Scan
      - name: Run StackHawk Scan
        uses: stackhawk/hawkscan-action@v2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}     # Secret key for authentication.
          configurationFiles: .config/stackhawk/stackhawk.yml  # Path to configuration file.
          codeScanningAlerts: true   # Enable code scanning alerts.
          githubToken: ${{ github.token }}   # GitHub token for authentication to Code Scanning Alerts
